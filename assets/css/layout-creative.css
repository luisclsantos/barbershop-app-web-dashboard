/**======================================================================
=========================================================================
Template Name: DashboardKit - Most Complete Bootstrap Admin Template
Author: DashboardKit
Support: dashboardkit@gmail.com
File: style.css
=========================================================================
=================================================================================== */
.creative-layout {
    background-color: #ffffff;
    min-height: 100vh;
    padding-bottom: 70px;
}

@media (min-width: 1025px) {
    .creative-layout .pc-sidebar {
        box-shadow: none;
    }

    .creative-layout .pc-sidebar .m-header {
        background-color: #ffffff;
    }

    .creative-layout .pc-sidebar .navbar-content {
        height: calc(100vh - 70px);
    }

    .creative-layout .page-header {
        background: transparent;
        box-shadow: none;
        position: absolute;
        top: 10px;
        left: 0;
    }

    .creative-layout .pc-header {
        z-index: 1026;
        box-shadow: none;
    }

    .creative-layout .pc-header .m-header {
        width: calc(280px - 15px);
    }

    .creative-layout .pc-container {
        background: #f0f2f8;
        box-shadow: inset 0 1px 20px rgba(69, 90, 100, 0.08);
        border-radius: 14px 14px 0 0;
        margin-right: 30px;
        height: calc(100vh - 70px);
        overflow: scroll;
        border: 1px solid rgba(69, 90, 100, 0.08);
    }

    .creative-layout .pc-container::-webkit-scrollbar {
        display: none;
    }

    .creative-layout .pc-container .page-header + .row {
        padding-top: 0;
    }

    .creative-layout .pc-container .pcoded-content {
        padding-top: calc(40px + 35px);
    }
}

@media (max-width: 1024px) {
    .creative-layout .pc-header.dark-header .pc-head-link, .creative-layout .pc-header[class*="bg-"] .pc-head-link {
        color: #525b69 !important;
    }

    .creative-layout .pc-header .b-brand {
        display: none;
    }

    .creative-layout .pc-container {
        background: #f0f2f8;
    }

    .creative-layout .pc-sidebar .m-header {
        background: #ffffff;
    }

    .creative-layout .pc-sidebar .navbar-content {
        height: 100vh;
    }
}

.creative-layout .pct-customizer {
    display: none;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
